name: Lint, Build, Scan, Push, Test docker image
run-name: Docker CI/CD
on: 
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request: 
    branches: [ "master" ]
jobs:
    release:
      runs-on: ubuntu-latest
    docker-lint:
        runs-on: ubuntu-latest
        continue-on-error: true
        container:
            image: hadolint/hadolint:2.6.0-alpine
        steps:
            - uses: actions/checkout@v3
            - name: Lint dockerfile
              run: hadolint ./gitops/Dockerfile  

    docker-build:
        runs-on: ubuntu-latest
        needs: "docker-lint"
        outputs:
          artifact-id: ${{ steps.artifact-upload.outputs.artifact-id }}
        steps:
            - uses: actions/checkout@v3
            - name: Build docker image
              run: docker build -t ${{vars.CI_REGISTRY}}:${{github.sha}} -f ./gitops/Dockerfile .
            - name: Create builds directory
              run: mkdir builds 
            - name: Save builted image
              run: docker image save -o builds/${{github.sha}}.tar ${{vars.CI_REGISTRY}}:${{github.sha}}
            - uses: actions/upload-artifact@v4
              with:
                name: ${{github.sha}}
                path: builds/${{github.sha}}.tar

    docker-scan:
      runs-on: ubuntu-latest
      container: 
        image: cgr.dev/chainguard/grype:latest
      needs: "docker-build"
      steps:
        - uses: actions/checkout@v3
        - uses: actions/download-artifact@v4
          with:
            name: ${{github.sha}}
        - name: Load docker image
          run: docker load -i ${{github.sha}}.tar
    
    docker-push:
      runs-on: ubuntu-latest
      needs: docker-build
      steps:
        - uses: actions/checkout@v3
        - uses: actions/download-artifact@v4
          with:
            name: ${{github.sha}}
        - name: Load docker image
          run: docker load -i ${{github.sha}}.tar
        - name: Update docekr tag
          run: |
            docker tag ${{vars.CI_REGISTRY}}:${{github.sha}} ${{vars.CI_REGISTRY}}:latest
            docker tag ${{vars.CI_REGISTRY}}:${{github.sha}} ${{vars.CI_REGISTRY}}:${{github.ref_name}}
        - name: Docker login
          run: docker login -u ${{secrets.CI_REGISTRY_USER}} -p ${{secrets.CI_REGISTRY_PASSWORD}}
        - name: Docker push image
          run: |
            docker push ${{vars.CI_REGISTRY}}:${{github.ref_name}}
            docker push ${{vars.CI_REGISTRY}}:latest
            